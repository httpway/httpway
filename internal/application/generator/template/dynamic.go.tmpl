{{- define "dynamic.go" -}}
// Code generated by PipeHub; DO NOT EDIT.

package pipe
{{ if gt (len .Pipe) 0 }}
import (
	"github.com/pkg/errors"
{{ range .Pipe }}
{{- if .ImportPathAlias }}
	{{ .ImportPathAlias }} "{{ if .Module }}{{ .Module }}{{ else }}{{ .ImportPath }}{{ end }}"
{{- else }}
	"{{ if .Module }}{{ .Module }}{{ else }}{{ .ImportPath }}{{ end }}"
{{- end }}
{{- end }}
)
{{ end }}
func (m *Manager) InitPipes() error {
{{- range .Pipe }}
	{
		cfg := m.config("{{ .ImportPath }}", "{{ if .Module }}{{ .Module }}{{ else }}{{ .Revision }}{{ end }}")
		client, err := {{ .Alias }}.NewClient(cfg)
		if err != nil {
			return errors.Wrap(err, "'{{ if .Module }}{{ .Module }}{{ else }}{{ .ImportPath }}{{ end }}' initialization error")
		}

		m.instances["{{ if .ImportPathAlias }}{{ .ImportPathAlias }}{{ else }}{{ .Alias }}{{ end }}"] = instance{
			id:         "{{ if .Module }}{{ .Module }}{{ else }}{{ .ImportPath }}{{ end }}",
			importPath: "{{ .ImportPath }}",
			instancer:  client,
		}
	}
{{ end }}
	return nil
}
{{- end -}}